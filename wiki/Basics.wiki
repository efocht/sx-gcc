#summary Some fundamentals for the porting to SX vector CPUs.

= Introduction =

These Wiki pages contain a collection of basic facts about the SX CPU, the binutils and the gcc that are essential in porting said programs to the SX vector CPU. This collection is not intended to be exhaustive because all information can be found somewhere else. It should more or less serve as a reference point and as a discussion forum if things in the manuals are not clear or misleading.

= SX Architecture =

In order to port binutils and gcc to a new platform, it is essential to know the platform you want to port to. So in this section a brief overview will be given of the architecture of the SX.

== Fundamentals ==
* Registers *
 * 128 Scalar registers (64 bit wide; S0, S1,..., S127)			
 * 8 Vector Arithmetic registers (64 bit wide, max. 256 Elements)			
 * 64 Vector Data registers			
 * 1 Vector Control register			
 * 16 Vector Mask registers (256 bit wide; VM0, ..., VM15)			
 * 1 Vector Length register (10 bit wide)			

 * 1 PSW register (64 bit wide)	
 * 1 IC (64 bit wide)	
 * 1 CPSB (64 bit wide)	
 * 1 NPSB (64 bit wide)	


== Memory Access ==

 * Virtual address is 40 bits wide (results in 1 TB address space)
 * Four possible page sizes: 32 kB (2^15^), 4 MB (2^22^), 16 MB (2^24^) and 64 MB (2^26^)
 * Partial space: Virtual address space is also divided in 256 contiguous pages

== Instruction Formats ==
=== RX Type ===
=== CFX Type ===
=== RR Type ===
=== RW Type ===
=== RV Type ===
=== RZ Type ===
=== RRX Type ===
 
=== Address Generation For Different Instruction Types ===
==== RX Type Instructions ====
==== RR/RRX Type Instructions ====
==== CFX/RZ Type Instructions ====
 
== Assembler Instructions ==

= Binutils =

== Binary File Description (BFD) ==

== Opcodes ==

== Assembler ==

= GNU C Compiler =

== How does it work? ==

== Important Files for Porting ==


